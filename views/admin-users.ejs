<%- include('partials/header') %>

<style>
    .admin-users-container {
        background-color: #F2EFE7;
        min-height: calc(100vh - 60px);
        padding: 30px 20px;
    }
    
    .admin-header {
        text-align: center;
        margin-bottom: 30px;
    }
    
    .admin-header h1 {
        color: #006A71;
        font-size: 28px;
        margin-bottom: 10px;
        font-weight: bold;
    }
    
    .admin-header p {
        color: #48A6A7;
        font-size: 16px;
    }
    
    .admin-content {
        max-width: 1000px;
        margin: 0 auto;
    }
    
    .admin-card {
        background-color: #9ACBD0;
        border-radius: 10px;
        padding: 25px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
    }
    
    .admin-card h2 {
        color: #006A71;
        font-size: 20px;
        margin-bottom: 15px;
        font-weight: bold;
    }
    
    .admin-card p {
        color: #006A71;
        margin-bottom: 20px;
    }
    
    .user-list {
        margin-top: 20px;
    }
    
    .user-item {
        background-color: rgba(242, 239, 231, 0.5);
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        transition: opacity 0.3s ease;
    }
    
    .user-info {
        flex: 1;
    }
    
    .user-name {
        font-weight: bold;
        color: #006A71;
        font-size: 16px;
    }
    
    .user-email {
        color: #006A71;
        font-size: 14px;
        margin-top: 5px;
    }
    
    .user-role {
        display: inline-block;
        padding: 3px 8px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: bold;
        margin-left: 10px;
    }
    
    .role-admin {
        background-color: #dc3545;
        color: white;
    }
    
    .role-user {
        background-color: #28a745;
        color: white;
    }
    
    .user-actions {
        display: flex;
        gap: 10px;
    }
    
    .action-btn {
        background-color: #006A71;
        color: #F2EFE7;
        border: none;
        padding: 8px 12px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
        transition: background-color 0.3s;
    }
    
    .action-btn:hover {
        background-color: #48A6A7;
    }
    
    .action-btn:disabled {
        background-color: #cccccc;
        cursor: not-allowed;
    }
    
    .transfer-btn {
        background-color: #dc3545;
    }
    
    .transfer-btn:hover {
        background-color: #c82333;
    }
    
    .delete-btn {
        background-color: #6c757d;
    }
    
    .delete-btn:hover {
        background-color: #5a6268;
    }
    
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }
    
    .modal-content {
        background-color: #9ACBD0;
        margin: 15% auto;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        max-width: 500px;
        width: 90%;
    }
    
    .modal-header {
        margin-bottom: 20px;
    }
    
    .modal-header h3 {
        color: #006A71;
        font-size: 20px;
        font-weight: bold;
    }
    
    .modal-body {
        margin-bottom: 20px;
    }
    
    .modal-body p {
        color: #006A71;
        margin-bottom: 15px;
    }
    
    .form-group {
        margin-bottom: 15px;
    }
    
    .form-group label {
        display: block;
        margin-bottom: 8px;
        color: #006A71;
        font-weight: 500;
    }
    
    .form-group input {
        width: 100%;
        padding: 10px;
        border: 1px solid #F2EFE7;
        border-radius: 5px;
        background-color: #F2EFE7;
        color: #006A71;
    }
    
    .modal-footer {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
    }
    
    .close-btn {
        background-color: #6c757d;
        color: white;
    }
    
    .confirm-btn {
        background-color: #dc3545;
        color: white;
    }
    
    .result-message {
        margin-top: 20px;
        padding: 15px;
        border-radius: 5px;
        display: none;
    }
    
    .success-message {
        background-color: rgba(40, 167, 69, 0.2);
        color: #28a745;
    }
    
    .error-message {
        background-color: rgba(220, 53, 69, 0.2);
        color: #dc3545;
    }
    
    @media (max-width: 768px) {
        .user-item {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .user-actions {
            margin-top: 15px;
            width: 100%;
            justify-content: flex-end;
        }
    }
</style>

<div class="admin-users-container">
    <div class="admin-header">
        <h1>User Management</h1>
        <p>Manage users and admin privileges</p>
    </div>
    
    <div class="admin-content">
        <div class="admin-card">
            <h2>Admin Privileges</h2>
            <p>Only one admin can exist in the system at a time. You can transfer your admin privileges to another user.</p>
            
            <div id="successMessage" class="result-message success-message"></div>
            <div id="errorMessage" class="result-message error-message"></div>
            
            <div class="user-list">
                <% users.forEach(user => { %>
                    <div class="user-item" data-id="<%= user._id %>">
                        <div class="user-info">
                            <div class="user-name">
                                <%= user.username %>
                                <span class="user-role role-<%= user.role %>"><%= user.role %></span>
                            </div>
                            <div class="user-email"><%= user.email %></div>
                        </div>
                        <div class="user-actions">
                            <% if (user.role !== 'admin') { %>
                                <button class="action-btn transfer-btn" onclick="openTransferModal('<%= user._id %>', '<%= user.username %>')">Transfer Admin</button>
                                <button class="action-btn delete-btn" onclick="openDeleteModal('<%= user._id %>', '<%= user.username %>')">Delete User</button>
                            <% } %>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
    </div>
</div>

<!-- Transfer Admin Modal -->
<div id="transferModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Transfer Admin Privileges</h3>
        </div>
        <div class="modal-body">
            <p>You are about to transfer your admin privileges to <strong id="targetUsername"></strong>. This action cannot be undone.</p>
            <p>Please enter your password to confirm:</p>
            
            <div class="form-group">
                <label for="adminPassword">Your Password</label>
                <input type="password" id="adminPassword" required>
            </div>
            
            <input type="hidden" id="targetUserId">
        </div>
        <div class="modal-footer">
            <button class="action-btn close-btn" onclick="closeModal('transferModal')">Cancel</button>
            <button class="action-btn confirm-btn" id="confirmTransferBtn" onclick="transferAdmin()">Confirm Transfer</button>
        </div>
    </div>
</div>

<!-- Delete User Modal -->
<div id="deleteModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Delete User</h3>
        </div>
        <div class="modal-body">
            <p>You are about to delete user <strong id="deleteUsername"></strong>. This action cannot be undone.</p>
            <p>All data associated with this user will be permanently deleted.</p>
            <p>Please enter your password to confirm:</p>
            
            <div class="form-group">
                <label for="deletePassword">Your Password</label>
                <input type="password" id="deletePassword" required>
            </div>
            
            <input type="hidden" id="deleteUserId">
        </div>
        <div class="modal-footer">
            <button class="action-btn close-btn" onclick="closeModal('deleteModal')">Cancel</button>
            <button class="action-btn confirm-btn" id="confirmDeleteBtn" onclick="deleteUser()">Confirm Delete</button>
        </div>
    </div>
</div>

<script>
    // Modal functions
    function openTransferModal(userId, username) {
        document.getElementById('targetUserId').value = userId;
        document.getElementById('targetUsername').textContent = username;
        document.getElementById('adminPassword').value = '';
        document.getElementById('transferModal').style.display = 'block';
    }
    
    function openDeleteModal(userId, username) {
        document.getElementById('deleteUserId').value = userId;
        document.getElementById('deleteUsername').textContent = username;
        document.getElementById('deletePassword').value = '';
        document.getElementById('deleteModal').style.display = 'block';
    }
    
    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }
    
    // Close modals when clicking outside of them
    window.onclick = function(event) {
        const transferModal = document.getElementById('transferModal');
        const deleteModal = document.getElementById('deleteModal');
        
        if (event.target === transferModal) {
            closeModal('transferModal');
        } else if (event.target === deleteModal) {
            closeModal('deleteModal');
        }
    };
    
    // Transfer admin function
    function transferAdmin() {
        const userId = document.getElementById('targetUserId').value;
        const password = document.getElementById('adminPassword').value;
        const confirmBtn = document.getElementById('confirmTransferBtn');
        
        // Validate password
        if (!password) {
            alert('Please enter your password');
            return;
        }
        
        // Disable button and show loading state
        confirmBtn.disabled = true;
        confirmBtn.textContent = 'Processing...';
        
        // Send request to transfer admin
        fetch('/admin/transfer-admin', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ userId, password })
        })
        .then(response => response.json())
        .then(data => {
            // Close modal
            closeModal('transferModal');
            
            // Reset button state
            confirmBtn.disabled = false;
            confirmBtn.textContent = 'Confirm Transfer';
            
            if (data.success) {
                // Show success message
                const successMessage = document.getElementById('successMessage');
                successMessage.textContent = data.message;
                successMessage.style.display = 'block';
                
                // Hide error message if visible
                document.getElementById('errorMessage').style.display = 'none';
                
                // Redirect to home page after a delay
                setTimeout(() => {
                    window.location.href = '/';
                }, 3000);
            } else {
                // Show error message
                const errorMessage = document.getElementById('errorMessage');
                errorMessage.textContent = data.message;
                errorMessage.style.display = 'block';
                
                // Hide success message if visible
                document.getElementById('successMessage').style.display = 'none';
            }
        })
        .catch(error => {
            console.error('Transfer error:', error);
            
            // Close modal
            closeModal('transferModal');
            
            // Reset button state
            confirmBtn.disabled = false;
            confirmBtn.textContent = 'Confirm Transfer';
            
            // Show error message
            const errorMessage = document.getElementById('errorMessage');
            errorMessage.textContent = 'An error occurred. Please try again.';
            errorMessage.style.display = 'block';
            
            // Hide success message if visible
            document.getElementById('successMessage').style.display = 'none';
        });
    }
    
    // Delete user function
    function deleteUser() {
        const userId = document.getElementById('deleteUserId').value;
        const password = document.getElementById('deletePassword').value;
        const confirmBtn = document.getElementById('confirmDeleteBtn');
        
        // Validate password
        if (!password) {
            alert('Please enter your password');
            return;
        }
        
        // Disable button and show loading state
        confirmBtn.disabled = true;
        confirmBtn.textContent = 'Processing...';
        
        // Send request to delete user
        fetch('/admin/delete-user', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ userId, password })
        })
        .then(response => response.json())
        .then(data => {
            // Close modal
            closeModal('deleteModal');
            
            // Reset button state
            confirmBtn.disabled = false;
            confirmBtn.textContent = 'Confirm Delete';
            
            if (data.success) {
                // Show success message
                const successMessage = document.getElementById('successMessage');
                successMessage.textContent = data.message;
                successMessage.style.display = 'block';
                
                // Hide error message if visible
                document.getElementById('errorMessage').style.display = 'none';
                
                // Remove the user from the UI
                const userItem = document.querySelector(`.user-item[data-id="${userId}"]`);
                if (userItem) {
                    userItem.style.opacity = '0';
                    setTimeout(() => {
                        userItem.remove();
                    }, 300);
                }
            } else {
                // Show error message
                const errorMessage = document.getElementById('errorMessage');
                errorMessage.textContent = data.message;
                errorMessage.style.display = 'block';
                
                // Hide success message if visible
                document.getElementById('successMessage').style.display = 'none';
            }
        })
        .catch(error => {
            console.error('Delete error:', error);
            
            // Close modal
            closeModal('deleteModal');
            
            // Reset button state
            confirmBtn.disabled = false;
            confirmBtn.textContent = 'Confirm Delete';
            
            // Show error message
            const errorMessage = document.getElementById('errorMessage');
            errorMessage.textContent = 'An error occurred. Please try again.';
            errorMessage.style.display = 'block';
            
            // Hide success message if visible
            document.getElementById('successMessage').style.display = 'none';
        });
    }
</script>